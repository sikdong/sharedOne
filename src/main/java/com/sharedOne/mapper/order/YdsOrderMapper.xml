<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.sharedOne.mapper.order.YdsOrderMapper">
	<select id="searchBuyer" resultType="com.sharedOne.domain.master.BuyerDto">
		SELECT 
			buyerCode,
			buyerName,
			address,
			country,
			businessNumber,
			phone,
			deliveryCompany,
			manager
		FROM Buyer
		<where>
		<trim prefixOverrides="OR" prefix="OR">
			<if test="buyerName != null">
				OR buyerName Like #{buyerInfo}
			</if>
			<if test="buyerCode !=null">
				OR buyerCode LIKE #{buyerInfo}
			</if>
			<if test="address !=null">
				OR address Like #{buyerInfo}
			</if>
			<if test="country !=null">
				OR country LIKE #{buyerInfo}
			</if>
			<if test="manager !=null">
				OR manager LIKE #{buyerInfo}
			</if>
		</trim>
		</where>
		
	</select>
		<select id="getBuyerNames" resultType="com.sharedOne.domain.master.BuyerDto">
		SELECT 
			buyerName
		FROM Buyer
	</select>
	
	<select id="searchProduct" resultType="com.sharedOne.domain.master.ProductDto">
		SELECT 
			p.productCode,
			p.productType,
			p.productName,
			p.weight,
			p.size,
			p.price,
			p.unit,
			s.salePrice,
			s.fromDate,
			s.endDate
		FROM
			Product p 
		LEFT JOIN SalePrice s ON p.productCode = s.productCode
		WHERE
				(p.productCode LIKE #{allProductInfo}
				OR p.productName LIKE #{allProductInfo}
				OR p.productType LIKE #{allProductInfo}
				OR p.weight LIKE #{allProductInfo}
				OR p.size LIKE #{allProductInfo}
				)
		AND (s.fromDate = #{fromDate} AND s.endDate = #{endDate})
		AND s.buyerCode = #{tableBuyerCode}
		ORDER BY p.productCode
	</select>
	
	<select id="addTempProductOrder" resultType="com.sharedOne.domain.master.YdsProductDto">
		SELECT
		 	p.productCode,
		 	p.productName,
		 	p.productType,
		 	p.size,
		 	p.weight,
		 	p.unit,
		 	p.price,
		 	s.salePrice,
		 	s.priceId
		 FROM Product p
		 LEFT JOIN SalePrice s ON s.productCode = p.productCode
		 LEFT JOIN Buyer b ON s.buyerCode = b.buyerCode
		 where p.productCode = #{productCode} AND b.buyerCode = #{buyerCode}
		 AND s.fromDate = #{fromDate} AND s.endDate = #{endDate} 
		 
	</select>
	<insert id="insertOrderHeader" useGeneratedKeys="true" keyProperty="orderId">
	INSERT INTO Order_header(
		deliveryDate,
		buyerCode,
		status,
		message,
		memberId,
		writer
	)
	VALUES(#{deliveryDate}, #{buyerCode}, #{status} , #{message}, #{memberId}, (SELECT name FROM Member where id = #{memberId}))
	
	</insert>
	
	<update id="createOrderCode">
		UPDATE Order_header 
		SET 
		orderCode = CONCAT('WT',#{year}, #{generatedId})
		WHERE orderId = #{generatedId} 
	</update>
	
	<insert id="insertOrderItem">
	INSERT INTO Order_item(
		orderId,
		productCode,
		quantity,
		finalPrice,
		sum
	)
	VALUES(#{generatedId}, #{oid.productCode}, #{oid.quantity}, #{oid.finalPrice}, #{oid.sum})
	
	</insert>
	<insert id="insertNewOrderItem">
	INSERT INTO Order_item(
		orderId,
		productCode,
		quantity,
		finalPrice,
		sum
	)
	VALUES(#{orderId}, #{oid.productCode}, #{oid.quantity}, #{oid.finalPrice}, #{oid.sum})
	
	</insert>
	
	<select id="getDate" resultType="string">
	SELECT 
		inserted
	FROM Order_header
	WHERE orderId = #{generatedId}
	
	</select>
	
	<!-- 판매가 날짜 판별 위한 날짜 데이터 추출 -->
	<select id="getPriceDate" resultType="com.sharedOne.domain.master.ProductDto">
	SELECT
		s.productCode,
		s.fromDate,
		s.endDate
	FROM SalePrice s
	LEFT JOIN Product p ON s.productCode = p.productCode
	WHERE buyerCode=#{tableBuyerCode} AND (p.productCode LIKE #{allProductInfo}
				OR p.productName LIKE #{allProductInfo}
				OR p.productType LIKE #{allProductInfo}
				OR p.weight LIKE #{allProductInfo}
				OR p.size LIKE #{allProductInfo}
				)
	
	</select>

	<select id="getOrderHeader" resultType="com.sharedOne.domain.order.OrderHeaderDto">
	SELECT
		b.buyerName,
		b.buyerCode,
		oh.deliveryDate,
		oh.modified,
		oh.message,
		oh.orderId
	FROM Order_header oh
	LEFT JOIN Buyer b ON b.buyerCode = oh.buyerCode
	WHERE orderId = #{orderId}
	
	
	</select>
	
 	<select id="getOrderItem" resultType="com.sharedOne.domain.order.OrderItemDto">
	SELECT
		oi.productCode,
		p.productType,
		p.productName,
		p.unit,
		p.size,
		p.weight,
		p.price,
		oi.finalPrice,
		oi.quantity,
		oi.sum
	FROM Product p
	LEFT JOIN Order_item oi ON p.productCode = oi.productCode
	WHERE oi.orderId = #{orderId} 
	</select> 
	
	<update id="updateOrderHeader">
	UPDATE Order_header
	SET
		deliveryDate = #{ohd.deliveryDate},
		buyerCode = #{ohd.buyerCode},
		status = #{ohd.status},
		message = #{ohd.message},
		inserted = #{ohd.modified}
	WHERE orderId = #{orderId}
	
	</update>
	
	<update id="updateOrderItem">
	
	UPDATE Order_item
	SET
		quantity = #{oid.quantity},
		finalPrice = #{oid.finalPrice},
		sum = #{oid.sum}
	WHERE orderId = #{orderId} AND productCode = #{oid.productCode}
	</update>
	
	<delete id="deleteOrderItem">
	DELETE FROM Order_item
	WHERE productCode = #{productCode} AND orderId= #{orderId}
	</delete>
	
	
	<delete id="deleteOrder">
	DELETE FROM Order_item
	WHERE orderId= #{orderId}
	
	</delete>
	
	<select id="selectProductCodes" resultType="String">
	SELECT
		productCode
	FROM Order_item
	WHERE orderId=#{orderId}
	</select>
	

</mapper>